
Song
  #initialize
    accepts a name for the new song
  #name
    retrieves the name of a song
  #name=
    can set the name of a song
  @@all
    is initialized as an empty array
  .all
    returns the class variable @@all
  .destroy_all
    resets the @@all class variable to an empty array
  #save
    adds the Song instance to the @@all class variable
  .create
    initializes and saves the song

Artist
  #initialize
    accepts a name for the new artist
  #name
    retrieves the name of an artist
  #name=
    can set the name of an artist
  @@all
    is initialized as an empty array
  .all
    returns the class variable @@all
  .destroy_all
    resets the @@all class variable to an empty array
  #save
    adds the Artist instance to the @@all class variable
  .create
    initializes and saves the artist

Genre
  #initialize
    accepts a name for the new genre
  #name
    retrieves the name of a genre
  #name=
    can set the name of a genre
  @@all
    is initialized as an empty array
  .all
    returns the class variable @@all
  .destroy_all
    resets the @@all class variable to an empty array
  #save
    adds the Genre instance to the @@all class variable
  .create
    initializes and saves the genre

Associations â€” Song and Artist:
  Artist
    #initialize
      creates a 'songs' property set to an empty array (artist has many songs)
    #songs
      returns the artist's 'songs' collection (artist has many songs)
  Song
    #initialize
      can be invoked with an optional second argument, an Artist object to be assigned to the song's 'artist' property (song belongs to artist)
    #artist
      returns the artist of the song (song belongs to artist)
    #artist=
      assigns an artist to the song (song belongs to artist)
  Artist
    #add_song
      assigns the current artist to the song's 'artist' property (song belongs to artist)
